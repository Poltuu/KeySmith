# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master

resources:
  containers:
  - container: redis
    image: redis

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: 'buildTestPack'
  displayName: 'build test and pack'
  container: mcr.microsoft.com/dotnet/core/sdk:3.0
  services:
    redis: redis
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    CONNECTIONSTRINGS_REDIS: 'redis:6379' 
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration release'
  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: 'test'
      projects: '**/*.Tests.csproj'
      arguments: '--collect "Xplat code coverage"'
      nobuild: true
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      packagesToPack: '**/*.csproj'
      nobuild: true
      includesymbols: true
      includesource: true
      versioningScheme: 'off'
  - task: PublishBuildArtifacts@1
    displayName: 'Upload Packages Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Packages'
      publishLocation: 'Container'

- job: 'nuget'
  displayName: 'Nuget'
  dependsOn: 'buildTestPack'
  condition: succeeded()
  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Packages Artifacts'
    inputs:
      artifactName: Packages
      downloadPath: '$(System.DefaultWorkingDirectory)'
  - task: NuGetCommand@2
    displayName: 'Nuget push to local feed'
    inputs:
      command: 'push'
      packagesToPush: '$(System.DefaultWorkingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'TestNugetFeed'
      allowPackageConflicts: true
  - task: NuGetCommand@2
    displayName: 'Nuget push to nuget.org on tag'
    inputs:
      command: 'push'
      packagesToPush: '$(System.DefaultWorkingDirectory)/**/*.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: $(NUGET_SECRET)
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')