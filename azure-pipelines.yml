# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

resources:
  containers:
  - container: redis
    image: redis
    ports:
    - 6379:637
#${AGENT_SERVICES_REDIS_PORTS_6379}

services:
  redis: redis

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  CONNECTIONSTRINGS_REDIS: 'localhost:637' 

steps:  
- task: UseDotNet@2
  displayName: 'Use dotnet sdk 3.x'
  inputs:
    version: 3.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration release'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'
    arguments: '--collect "Xplat code coverage"'
    nobuild: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    includesymbols: true
    includesource: true
    versioningScheme: 'off'
    nobuild: true
    
- task: NuGetCommand@2
  displayName: 'nuget push to local feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'TestNugetFeed'
    allowPackageConflicts: true
  condition: succeeded()

- task: NuGetCommand@2
  displayName: 'nuget push to nuget.org on tag'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NugetConnection'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))