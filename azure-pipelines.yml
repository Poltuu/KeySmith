# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

container: mcr.microsoft.com/dotnet/core/sdk:3.0

resources:
  containers:
  - container: redis
    image: redis

services:
  redis: redis

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

steps:  

- script: dotnet tool install -g GitVersion.Tool
- script: dotnet-gitversion /output buildserver /nofetch

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration release /p:$(GitVersion.NuGetVersion)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'
    arguments: '--collect "Xplat code coverage"'
    nobuild: true
  env:
    CONNECTIONSTRINGS_REDIS: redis:6379

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    includesymbols: true
    includesource: true
    versioningScheme: 'off'
    nobuild: true

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;'
    publishVstsFeed: 'TestNugetFeed'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

# - task: NuGetCommand@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: NugetConnection
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))